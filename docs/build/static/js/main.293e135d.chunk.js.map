{"version":3,"sources":["redux/modules/todos/actionTypes.js","redux/modules/todos/reducer.js","redux/modules/todos/actions.js","redux/modules/todos/selectors.js","redux/modules/todos/index.js","redux/modules/categories/actionTypes.js","redux/modules/categories/reducer.js","redux/modules/categories/actions.js","redux/modules/categories/selectors.js","redux/modules/categories/index.js","redux/modules/ui/actionTypes.js","redux/modules/ui/reducer.js","redux/modules/ui/actions.js","redux/modules/ui/selectors.js","redux/modules/ui/index.js","redux/reducers.js","redux/configureStore.js","components/Header/Header.jsx","components/Header/index.js","components/Header/connect.js","components/common/InputWithButton/InputWithButton.jsx","components/common/InputWithButton/container.jsx","components/common/InputWithButton/index.js","components/Categories/Category/Category.jsx","components/Categories/Category/container.js","components/Categories/Category/index.js","components/Categories/Category/connect.js","components/Categories/Categories.jsx","components/Categories/index.js","components/Categories/connect.js","components/Todos/TodoList/Todo/Todo.jsx","components/Todos/TodoList/Todo/index.js","components/Todos/TodoList/TodoList.jsx","components/Todos/TodoList/index.js","components/Todos/TodoList/connect.js","components/Todos/TodoForm/TodoForm.jsx","components/Todos/TodoForm/container.js","components/Todos/TodoForm/index.js","components/Todos/TodoForm/connect.js","components/Todos/index.js","components/Todos/Todos.jsx","App.jsx","serviceWorker.js","index.js"],"names":["actionTypes","add","remove","removeWithCategory","update","toggle","init","id","title","categoryId","isDone","type","todoId","todos","state","todo","present","reducer","arguments","length","undefined","action","concat","Object","toConsumableArray","nanoid","filter","td","map","objectSpread","c","categories_actionTypes","addChild","parentId","categories","newCategories","childs","forEach","category","ui_actionTypes","toggleVisibility","changeSearchable","isDoneVisible","searchable","ui","reducers","history","combineReducers","uiReducer","router","connectRouter","undoable","todosReducer","categoriesReducer","createBrowserHistory","Wrapper","styled","div","_templateObject","Content","_templateObject2","Checkbox","AntCheckbox","_templateObject3","Controls","_templateObject4","calculateProgressLength","Header","_ref","undo","redo","react_default","a","createElement","controlGroup","vertical","checked","onClick","inputGroup","value","onChange","e","target","placeholder","rightElement","buttons","icon","style","marginLeft","progressBar","connect","todoSelectors","uiSelectors","ActionCreators","actions","InputWithButton","text","onSubmit","disabled","defaultProps","InputWithButtonContainer","handleChange","_this","setState","handleSubmit","props","this","common_InputWithButton_InputWithButton","React","Component","Category_templateObject","Title","Category_templateObject2","Inputs","Category_templateObject3","DialogContent","Category_templateObject4","InputGroup","BInputGroup","_templateObject5","Category","isEditing","edit","handleTitleChange","handleNewCategoryTitleChange","isModalVisible","newCategoryTitle","closeModal","submitModal","openModal","isChecked","Category_Wrapper","Link","to","small","dialog","isOpen","onClose","className","Classes","OVERLAY_SCROLL_CONTAINER","autoFocus","CategoryContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$props","addChildCategory","_this$props2","_this$props3","removeTodoWithCategory","_this$state","_this$props4","currentCategoryId","categoryProps","Categories_Category_Category","match","createMatchSelector","path","matchSelector","params","todoActions","Categories_templateObject","Categories","Categories_Controls","common_InputWithButton","renderCategory","Fragment","key","Categories_Category","selectors","Todo_templateObject","Todo","Todo_Wrapper","controls","TodoList_templateObject","TodoList","currentTodos","r","RegExp","toLowerCase","search","TodoList_Controls","TodoList_Todo","assign","Row","TodoForm_templateObject","TodoForm","save","cancel","textArea","large","TodoFormContainer","getCurrentTodo","find","goBack","_this$state2","todoFormProps","Todos_TodoForm_TodoForm","Todos","Switch","Route","exact","render","component","Layout","App_templateObject","Page","App_templateObject2","Sidebar","App_templateObject3","App_templateObject4","App","components_Header","components_Categories","App_Content","components_Todos","Boolean","window","location","hostname","preloadedState","store","createStore","createRootReducer","compose","applyMiddleware","routerMiddleware","ReactDOM","es","esm","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.293e135d.chunk.js","sourcesContent":["export default {\n  add: 'todo/add',\n  remove: 'todo/remove',\n  removeWithCategory: 'todo/removeWithCagegory',\n  update: 'todo/update',\n  toggle: 'todo/toggle',\n};\n","import nanoid from 'nanoid';\n\nimport actionTypes from './actionTypes';\n\nconst init = [\n  {\n    id: '1',\n    title: '1111',\n    categoryId: '1',\n    isDone: false,\n  },\n  {\n    id: '2',\n    title: '2222',\n    categoryId: '1',\n    isDone: true,\n  },\n];\n\nexport default function reducer(state = init, action = {}) {\n  switch (action.type) {\n    case actionTypes.add:\n      return [\n        ...state,\n        {\n          title: action.title,\n          categoryId: action.categoryId,\n          id: nanoid(),\n          isDone: false,\n        },\n      ];\n\n    case actionTypes.remove:\n      return state.filter(td => td.id !== action.todoId);\n\n    case actionTypes.removeWithCategory:\n      return state.filter(td => td.categoryId !== action.categoryId);\n\n    case actionTypes.toggle:\n      return state.map(td => {\n        if (td.id !== action.todoId) return td;\n\n        return { ...td, isDone: !td.isDone };\n      });\n\n    case actionTypes.update:\n      return state.map(c => {\n        if (c.id !== action.todoId) return c;\n        return { ...c, title: action.title, isDone: action.isDone };\n      });\n\n    default:\n      return state;\n  }\n}\n","import actionTypes from './actionTypes';\n\nexport const add = (categoryId, title) => {\n  return { type: actionTypes.add, title, categoryId };\n};\n\nexport const remove = todoId => {\n  return { type: actionTypes.remove, todoId };\n};\n\nexport const removeWithCategory = categoryId => {\n  return { type: actionTypes.removeWithCategory, categoryId };\n};\n\nexport const toggle = todoId => {\n  return { type: actionTypes.toggle, todoId };\n};\n\nexport const update = (todoId, isDone, title) => {\n  return { type: actionTypes.update, title, isDone, todoId };\n};\n","const todos = state => ({\n  todos: state.todo.present,\n});\n\n/* eslint-disable */\nexport { todos };\n","import reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\n\nexport { actions, selectors };\n\nexport default reducer;\n","export default {\n  add: 'category/add',\n  addChild: 'category/addChild',\n  remove: 'category/remove',\n  update: 'category/update',\n};\n","import nanoid from 'nanoid';\n\nimport actionTypes from './actionTypes';\n\nconst init = [\n  {\n    id: '1',\n    title: '1111',\n    parentId: null,\n  },\n  {\n    id: '2',\n    title: '2222',\n    parentId: '1',\n  },\n  {\n    id: '3',\n    title: '3333',\n    parentId: '2',\n  },\n  {\n    id: '4',\n    title: '444',\n    parentId: null,\n  },\n];\n\nconst remove = (categoryId, categories) => {\n  let newCategories = categories.filter(c => c.id !== categoryId);\n  const childs = categories.filter(c => c.parentId === categoryId);\n\n  if (childs.length) {\n    childs.forEach(c => {\n      newCategories = remove(c, newCategories);\n    });\n  }\n\n  return newCategories;\n};\n\nexport default function reducer(state = init, action = {}) {\n  switch (action.type) {\n    case actionTypes.add:\n      return [\n        ...state,\n        {\n          title: action.title,\n          id: nanoid(),\n          parentId: null,\n        },\n      ];\n\n    case actionTypes.addChild:\n      return [\n        ...state,\n        {\n          title: action.title,\n          parentId: action.parentId,\n          id: nanoid(),\n        },\n      ];\n\n    case actionTypes.remove:\n      return remove(action.categoryId, state);\n\n    case actionTypes.update:\n      return state.map(c => {\n        if (c.id !== action.categoryId) return c;\n        return { ...c, title: action.title };\n      });\n\n    default:\n      return state;\n  }\n}\n","import actionTypes from './actionTypes';\n\nexport const add = title => {\n  return { type: actionTypes.add, title };\n};\n\nexport const addChild = (parentId, title) => {\n  return { type: actionTypes.addChild, title, parentId };\n};\n\nexport const remove = categoryId => {\n  return { type: actionTypes.remove, categoryId };\n};\n\nexport const update = (categoryId, title) => {\n  return { type: actionTypes.update, title, categoryId };\n};\n","const categories = state => ({\n  categories: state.category.present,\n});\n\n/* eslint-disable */\nexport { categories };\n","import reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\n\nexport { actions, selectors };\n\nexport default reducer;\n","export default {\n  toggleVisibility: 'ui/toggleVisibility',\n  changeSearchable: 'ui/changeSearchable',\n};\n","import actionTypes from './actionTypes';\n\nconst init = {\n  isDoneVisible: true,\n  searchable: '',\n};\n\nexport default function reducer(state = init, action = {}) {\n  switch (action.type) {\n    case actionTypes.changeSearchable:\n      return { ...state, searchable: action.searchable };\n\n    case actionTypes.toggleVisibility:\n      return { ...state, isDoneVisible: !state.isDoneVisible };\n\n    default:\n      return state;\n  }\n}\n","import actionTypes from './actionTypes';\n\nexport const changeSearchable = searchable => {\n  return { type: actionTypes.changeSearchable, searchable };\n};\n\nexport const toggleVisibility = () => {\n  return { type: actionTypes.toggleVisibility };\n};\n","const ui = state => {\n  return {\n    ui: state.ui,\n  };\n};\n\n/* eslint-disable */\nexport { ui };\n","import reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\n\nexport { actions, selectors };\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport undoable from 'redux-undo';\nimport { connectRouter } from 'connected-react-router';\n\nimport todosReducer from './modules/todos';\nimport categoriesReducer from './modules/categories';\nimport uiReducer from './modules/ui';\n\nexport default history =>\n  combineReducers({\n    ui: uiReducer,\n    router: connectRouter(history),\n    todo: undoable(todosReducer),\n    category: undoable(categoriesReducer),\n  });\n","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport createRootReducer from './reducers';\n\nexport const history = createBrowserHistory();\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    compose(applyMiddleware(routerMiddleware(history)))\n  );\n\n  return store;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  ProgressBar,\n  ControlGroup,\n  Checkbox as AntCheckbox,\n  InputGroup,\n  Button,\n} from '@blueprintjs/core';\n\nconst Wrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Checkbox = styled(AntCheckbox)`\n  && {\n    margin-bottom: 0;\n    display: flex;\n    align-items: center;\n    margin-right: 20px !important;\n  }\n`;\n\nconst Controls = styled.div`\n  display: flex;\n`;\n\nconst calculateProgressLength = todos =>\n  todos.filter(td => td.isDone).length / todos.length;\n\nconst Header = ({\n  undo,\n  redo,\n  todos,\n  ui,\n  changeSearchable,\n  toggleVisibility,\n}) => (\n  <Wrapper>\n    <Content>\n      <h1>To-Do List</h1>\n\n      <Controls>\n        <ControlGroup vertical={false}>\n          <Checkbox checked={ui.isDoneVisible} onClick={toggleVisibility}>\n            Show done\n          </Checkbox>\n          <InputGroup\n            value={ui.searchable}\n            onChange={e => changeSearchable(e.target.value)}\n            placeholder=\"Search\"\n            rightElement={\n              ui.searchable.length ? (\n                <Button icon=\"cross\" onClick={() => changeSearchable('')} />\n              ) : null\n            }\n          />\n        </ControlGroup>\n\n        <ControlGroup vertical={false} style={{ marginLeft: 30 }}>\n          <Button onClick={undo}>Undo</Button>\n          <Button onClick={redo}>Redo</Button>\n        </ControlGroup>\n      </Controls>\n    </Content>\n\n    <ProgressBar value={calculateProgressLength(todos)} />\n  </Wrapper>\n);\n\nHeader.propTypes = {\n  ui: PropTypes.shape({\n    searchable: PropTypes.string.isRequired,\n    isDoneVisible: PropTypes.bool.isRequired,\n  }).isRequired,\n  changeSearchable: PropTypes.func.isRequired,\n  toggleVisibility: PropTypes.func.isRequired,\n  undo: PropTypes.func.isRequired,\n  redo: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      categoryId: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default Header;\n","import Header from './connect';\n\nexport default Header;\n","import { connect } from 'react-redux';\nimport { ActionCreators } from 'redux-undo';\n\nimport Header from './Header';\nimport { selectors as todoSelectors } from '../../redux/modules/todos';\nimport { actions, selectors as uiSelectors } from '../../redux/modules/ui';\n\nconst mapStateToProps = state => {\n  return { ...todoSelectors.todos(state), ...uiSelectors.ui(state) };\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...ActionCreators, ...actions }\n)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ControlGroup, InputGroup, Button } from '@blueprintjs/core';\n\nconst InputWithButton = ({ text, onChange, onSubmit, placeholder }) => (\n  <ControlGroup>\n    <InputGroup\n      placeholder={placeholder}\n      value={text}\n      onChange={e => onChange(e.target.value)}\n    />\n    <Button disabled={text.length <= 0} onClick={onSubmit}>\n      Add\n    </Button>\n  </ControlGroup>\n);\n\nInputWithButton.propTypes = {\n  placeholder: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nInputWithButton.defaultProps = {\n  placeholder: '',\n};\n\nexport default InputWithButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InputWithButton from './InputWithButton';\n\nclass InputWithButtonContainer extends React.Component {\n  state = {\n    text: '',\n  };\n\n  handleChange = text => {\n    this.setState({\n      text,\n    });\n  };\n\n  handleSubmit = () => {\n    const { text } = this.state;\n    const { onSubmit } = this.props;\n\n    onSubmit(text);\n\n    this.setState({\n      text: '',\n    });\n  };\n\n  render() {\n    const { text } = this.state;\n    const { placeholder } = this.props;\n\n    return (\n      <InputWithButton\n        placeholder={placeholder}\n        text={text}\n        onChange={this.handleChange}\n        onSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n\nInputWithButtonContainer.propTypes = {\n  placeholder: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nInputWithButtonContainer.defaultProps = {\n  placeholder: '',\n};\n\nexport default InputWithButtonContainer;\n","import InputWithButton from './container';\n\nexport default InputWithButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Dialog,\n  Icon,\n  Button,\n  InputGroup as BInputGroup,\n  Classes,\n} from '@blueprintjs/core';\n\nconst Wrapper = styled.div`\n  border: 1px solid #bbb;\n  border-radius: 5px;\n  padding: 3px;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 3px;\n`;\n\nconst Title = styled.div`\n  margin: 0 10px;\n`;\n\nconst Inputs = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst DialogContent = styled.div`\n  padding: 10px;\n`;\n\nconst InputGroup = styled(BInputGroup)`\n  margin: 0 10px;\n`;\n\nconst Category = ({\n  id,\n  title,\n  isEditing,\n  edit,\n  handleTitleChange,\n  update,\n  remove,\n  handleNewCategoryTitleChange,\n  isModalVisible,\n  newCategoryTitle,\n  closeModal,\n  submitModal,\n  openModal,\n  isChecked,\n}) => {\n  return (\n    <Wrapper>\n      <Inputs>\n        {isChecked && <Icon icon=\"tick\" />}\n        {isEditing ? (\n          <InputGroup\n            value={title}\n            onChange={e => handleTitleChange(e.target.value)}\n          />\n        ) : (\n          <Title>\n            <Link to={`/category/${id}`}>{title}</Link>\n          </Title>\n        )}\n        {isEditing ? (\n          <Button small icon=\"tick\" onClick={update} />\n        ) : (\n          <Button small icon=\"edit\" onClick={edit} />\n        )}\n      </Inputs>\n\n      <div>\n        <Button small icon=\"trash\" onClick={remove} />\n        <Button small icon=\"plus\" onClick={openModal} />\n      </div>\n\n      <Dialog\n        isOpen={isModalVisible}\n        onClose={closeModal}\n        className={Classes.OVERLAY_SCROLL_CONTAINER}\n      >\n        <DialogContent>\n          <InputGroup\n            value={newCategoryTitle}\n            onChange={e => handleNewCategoryTitleChange(e.target.value)}\n            autoFocus\n          />\n\n          <Button onClick={closeModal}>Close</Button>\n          <Button onClick={submitModal}>Add</Button>\n        </DialogContent>\n      </Dialog>\n    </Wrapper>\n  );\n};\n\nCategory.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  isChecked: PropTypes.bool.isRequired,\n  newCategoryTitle: PropTypes.string.isRequired,\n  isEditing: PropTypes.bool.isRequired,\n  isModalVisible: PropTypes.bool.isRequired,\n  edit: PropTypes.func.isRequired,\n  handleTitleChange: PropTypes.func.isRequired,\n  update: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired,\n  handleNewCategoryTitleChange: PropTypes.func.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  openModal: PropTypes.func.isRequired,\n  submitModal: PropTypes.func.isRequired,\n};\n\nexport default Category;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Category from './Category';\n\nclass CategoryContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditing: false,\n      isModalVisible: false,\n      title: props.category.title,\n      newCategoryTitle: '',\n    };\n  }\n\n  handleTitleChange = title => {\n    this.setState({ title });\n  };\n\n  edit = () => {\n    this.setState({ isEditing: true });\n  };\n\n  update = () => {\n    const { title } = this.state;\n    const { update, category } = this.props;\n\n    update(category.id, title);\n\n    this.setState({\n      isEditing: false,\n    });\n  };\n\n  openModal = () => {\n    this.setState({\n      isModalVisible: true,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      isModalVisible: false,\n      newCategoryTitle: '',\n    });\n  };\n\n  handleNewCategoryTitleChange = newCategoryTitle => {\n    this.setState({\n      newCategoryTitle,\n    });\n  };\n\n  addChildCategory = () => {\n    const { addChild, category } = this.props;\n    const { newCategoryTitle } = this.state;\n\n    addChild(category.id, newCategoryTitle);\n\n    this.closeModal();\n  };\n\n  remove = () => {\n    const { remove, category, removeTodoWithCategory } = this.props;\n\n    remove(category.id);\n    removeTodoWithCategory(category.id);\n  };\n\n  render() {\n    const { title, isEditing, isModalVisible, newCategoryTitle } = this.state;\n    const { category, currentCategoryId } = this.props;\n    const isChecked = category.id === currentCategoryId;\n\n    const categoryProps = {\n      id: category.id,\n      isChecked,\n      title,\n      isEditing,\n      isModalVisible,\n      newCategoryTitle,\n      handleTitleChange: this.handleTitleChange,\n      edit: this.edit,\n      update: this.update,\n      remove: this.remove,\n      closeModal: this.closeModal,\n      handleNewCategoryTitleChange: this.handleNewCategoryTitleChange,\n      submitModal: this.addChildCategory,\n      openModal: this.openModal,\n    };\n\n    return <Category {...categoryProps} />;\n  }\n}\n\nCategoryContainer.defaultProps = {\n  currentCategoryId: '',\n};\n\nCategoryContainer.propTypes = {\n  category: PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n  }).isRequired,\n  update: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired,\n  removeTodoWithCategory: PropTypes.func.isRequired,\n  addChild: PropTypes.func.isRequired,\n  currentCategoryId: PropTypes.string,\n};\n\nexport default CategoryContainer;\n","import Category from './connect';\n\nexport default Category;\n","import { connect } from 'react-redux';\nimport { createMatchSelector } from 'connected-react-router';\n\nimport CategoryContainer from './container';\nimport { actions } from '../../../redux/modules/categories';\nimport { actions as todoActions } from '../../../redux/modules/todos';\n\nconst mapStateToProps = state => {\n  const matchSelector = createMatchSelector({ path: '/category/:id' });\n  const match = matchSelector(state);\n\n  return {\n    currentCategoryId: match ? match.params.id : null,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...actions, removeTodoWithCategory: todoActions.removeWithCategory }\n)(CategoryContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport InputWithButton from '../common/InputWithButton';\nimport Category from './Category';\n\nconst Controls = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Categories = ({ add, categories }) => {\n  const renderCategory = category => (\n    <React.Fragment key={category.id}>\n      <Category category={category} />\n      <div style={{ marginLeft: 10 }}>\n        {categories.filter(c => c.parentId === category.id).map(renderCategory)}\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <div>\n      <Controls>\n        <InputWithButton placeholder=\"Enter category title\" onSubmit={add} />\n      </Controls>\n\n      <div>{categories.filter(c => !c.parentId).map(renderCategory)}</div>\n    </div>\n  );\n};\n\nCategories.propTypes = {\n  add: PropTypes.func.isRequired,\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Categories;\n","import connect from './connect';\n\nexport default connect;\n","import { connect } from 'react-redux';\n\nimport Categories from './Categories';\nimport { actions, selectors } from '../../redux/modules/categories';\n\nexport default connect(\n  selectors.categories,\n  actions\n)(Categories);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport { Checkbox, Button } from '@blueprintjs/core';\n\nconst Wrapper = styled.div`\n  border: 1px solid #bbb;\n  border-radius: 5px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  margin-bottom: 3px;\n`;\n\nconst Todo = ({ id, isDone, title, toggle }) => (\n  <Wrapper>\n    <div>\n      <Checkbox checked={isDone} onClick={toggle}>\n        {title}\n      </Checkbox>\n    </div>\n\n    <div>\n      <Link to={`/todo/${id}/edit`}>\n        <Button icon=\"edit\" />\n      </Link>\n    </div>\n  </Wrapper>\n);\n\nTodo.propTypes = {\n  isDone: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import Todo from './Todo';\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Todo from './Todo';\nimport InputWithButton from '../../common/InputWithButton';\n\nconst Controls = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst TodoList = ({ match, add, toggle, todos, ui }) => {\n  const { categoryId } = match.params;\n  const addWithCategory = title => add(categoryId, title);\n  let currentTodos = todos.filter(td => td.categoryId === categoryId);\n\n  if (!ui.isDoneVisible) {\n    currentTodos = currentTodos.filter(td => !td.isDone);\n  }\n\n  if (ui.searchable) {\n    const r = new RegExp(`.*${ui.searchable.toLowerCase()}.*`);\n    currentTodos = currentTodos.filter(\n      td => td.title.toLowerCase().search(r) !== -1\n    );\n  }\n\n  return (\n    <div>\n      <Controls>\n        <InputWithButton\n          placeholder=\"Enter todo text\"\n          onSubmit={addWithCategory}\n        />\n      </Controls>\n\n      <div>\n        {currentTodos.map(todo => (\n          <Todo key={todo.id} {...todo} toggle={() => toggle(todo.id)} />\n        ))}\n        {currentTodos.length === 0 && <div>Empty todo list</div>}\n      </div>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  add: PropTypes.func.isRequired,\n  toggle: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object,\n  }).isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      categoryId: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ).isRequired,\n  ui: PropTypes.shape({\n    searchable: PropTypes.string.isRequired,\n    isDoneVisible: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default TodoList;\n","import TodoList from './connect';\n\nexport default TodoList;\n","import { connect } from 'react-redux';\n\nimport TodoList from './TodoList';\nimport {\n  actions,\n  selectors as todoSelectors,\n} from '../../../redux/modules/todos';\nimport { selectors as uiSelectors } from '../../../redux/modules/ui';\n\nconst mapStateToProps = state => {\n  return { ...todoSelectors.todos(state), ...uiSelectors.ui(state) };\n};\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(TodoList);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { InputGroup, Button, Checkbox, TextArea } from '@blueprintjs/core';\n\nconst Row = styled.div`\n  margin: 10px 0;\n`;\n\nconst TodoForm = ({\n  save,\n  cancel,\n  title,\n  isDone,\n  toggle,\n  handleTitleChange,\n}) => {\n  return (\n    <div>\n      <Row>\n        <Button onClick={save}>Save Changes</Button>\n        <Button onClick={cancel}>Cancel</Button>\n      </Row>\n\n      <Row>\n        <InputGroup\n          value={title}\n          onChange={e => handleTitleChange(e.target.value)}\n        />\n      </Row>\n\n      <Row>\n        <Checkbox checked={isDone} onClick={toggle}>\n          Done\n        </Checkbox>\n      </Row>\n\n      <Row>\n        <TextArea large value=\"????\" onChange={() => ({})} />\n      </Row>\n    </div>\n  );\n};\n\nTodoForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  isDone: PropTypes.bool.isRequired,\n  save: PropTypes.func.isRequired,\n  cancel: PropTypes.func.isRequired,\n  toggle: PropTypes.func.isRequired,\n  handleTitleChange: PropTypes.func.isRequired,\n};\n\nexport default TodoForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoForm from './TodoForm';\n\nclass TodoFormContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const todo = this.getCurrentTodo();\n\n    this.state = {\n      title: todo.title,\n      isDone: todo.isDone,\n    };\n  }\n\n  getCurrentTodo = () => {\n    const { match, todos } = this.props;\n    const { todoId } = match.params;\n    const todo = todos.find(td => td.id === todoId);\n\n    return todo;\n  };\n\n  handleTitleChange = title => {\n    this.setState({ title });\n  };\n\n  toggle = () => {\n    const { isDone } = this.state;\n\n    this.setState({ isDone: !isDone });\n  };\n\n  save = () => {\n    const { title, isDone } = this.state;\n    const { update } = this.props;\n    const todo = this.getCurrentTodo();\n\n    update(todo.id, isDone, title);\n    this.cancel();\n  };\n\n  cancel = () => {\n    const { history } = this.props;\n    const { goBack } = history;\n\n    goBack();\n  };\n\n  render() {\n    const { title, isDone } = this.state;\n\n    const todoFormProps = {\n      title,\n      isDone,\n      save: this.save,\n      handleTitleChange: this.handleTitleChange,\n      toggle: this.toggle,\n      cancel: this.cancel,\n    };\n\n    return <TodoForm {...todoFormProps} />;\n  }\n}\n\nTodoFormContainer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object,\n  }).isRequired,\n  history: PropTypes.shape({\n    goBack: PropTypes.func,\n  }).isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      categoryId: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ).isRequired,\n  update: PropTypes.func.isRequired,\n};\n\nexport default TodoFormContainer;\n","import TodoForm from './connect';\n\nexport default TodoForm;\n","import { connect } from 'react-redux';\n\nimport TodoFormContainer from './container';\nimport { actions, selectors } from '../../../redux/modules/todos';\n\nconst mapStateToProps = state => {\n  return { ...selectors.todos(state), router: state.router };\n};\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(TodoFormContainer);\n","import Todos from './Todos';\n\nexport default Todos;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport TodoList from './TodoList';\nimport TodoForm from './TodoForm';\n\nconst Todos = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" render={() => <h2>Select category</h2>} />\n        <Route path=\"/category/:categoryId\" component={TodoList} />\n        <Route path=\"/todo/:todoId/edit\" component={TodoForm} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Todos;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Header from './components/Header';\nimport Categories from './components/Categories';\nimport Todos from './components/Todos';\n\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\n\nconst Layout = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst Page = styled.div`\n  display: flex;\n`;\n\nconst Sidebar = styled.div`\n  width: 400px;\n  margin-right: 20px;\n`;\n\nconst Content = styled.div`\n  flex: 1;\n`;\n\nconst App = () => (\n  <Layout>\n    <Header />\n\n    <Page>\n      <Sidebar>\n        <Categories />\n      </Sidebar>\n\n      <Content>\n        <Todos />\n      </Content>\n    </Page>\n  </Layout>\n);\n\nexport default App;\n","/* eslint-disable no-console, no-param-reassign, no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport { history, configureStore } from './redux';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}